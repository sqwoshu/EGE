ТИП 1(досрок):
  Пусть M — сумма минимального и максимального натуральных делителей целого числа, не считая единицы и самого числа. Если таких делителей у числа нет,
то считаем значение M равным нулю.
  Напишите программу, которая перебирает целые числа, большие 452 021, в порядке возрастания и ищет среди них такие, для которых значение M при делении 
на 7 даёт в остатке 3. Вывести первые 5 найденных чисел и соответствующие им значения M.
  Формат вывода: для каждого из 5 таких найденных чисел в отдельной строке сначала выводится само число, затем — значение М. Строки выводятся в порядке
возрастания найденных чисел.

sta = 452022
count = 0
k = 0
dl = []
while count <= 5:
    for i in range(2,sta):
        if sta % i == 0:
            k+=1
            dl.append(i)
    if k >= 2:
        m = dl[0] + dl[-1]
        if m % 7 == 3:
            print(sta,m)
            count+=1
        k=0
        dl.clear()
        sta+=1
    else:
        k=0
        dl.clear()
        sta+=1
        
        
ТИП 2(демо):
  Напишите  программу,  которая  ищет  среди  целых  чисел,  принадлежащих числовому отрезку[174457; 174505], числа, имеющие ровно два различных
натуральных  делителя,  не  считая  единицы  и  самого  числа.  Для  каждого найденного числа запишите эти два делителя в таблицу на экране с новой
строки в порядке возрастания произведения этих двух делителей. Делители в строке таблицы также должны следовать в порядке возрастания. 

start = 174457
k = 0
dl = []
while start != 174506:
    for i in range(2,start):
        if start % i == 0:
            k+=1
            dl.append(i)
    if k == 2:
        print(dl[0],dl[-1])
        dl.clear()
        k = 0
        start+=1
    else:
        dl.clear()
        k = 0
        start += 1


ТИП 3:
  Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [3532000; 3532160], простые числа. Выведите все найденные простые 
числа в порядке возрастания, слева от каждого числа выведите его номер по порядку.
 
start = 3532000
k = 0
dl = []
while start < 3532161:
    for i in range(1,start+1):
        if start % i == 0:
            k+=1
    if k == 2:
        print(start)
        start+=1
        k=0
        dl.clear()
    else:
        start+=1
        k=0
        dl.clear()
        
        
ТИП 4:
  Напишите программу, которая перебирает целые цисла, больше 450 000, в порядке возрастания и ищет среди них такие, для которых наибольший натуральный
делитель, не равный самому числу, не яляется простым числом. Программа должна найти и вывести первые 6 таких чисел и соответствующие им значения упомянутых
делителей.
  Форма вывода: для каждого из 6 таких найденных чисел в отдельной строке сначала выводится само число, затем упомянутый делитель. Строки выводятся в порядке 
возрастания найденных чисел.

start = 450001
count = 0
k = 0
c = 0
dl = []
while count < 6:
    for i in range(2,start):
        if start % i == 0:
            dl.append(i)
            k += 1
    if k > 1:
        g = dl[-1]
        for i in range(2,g):
            if g % i == 0:
                c+=1
        if c > 1:
            print(start,g)
            count+=1
        start+=1
        c,k = 0,0
        dl.clear()
    else:
        c,k = 0,0
        dl.clear()
        start+=1

ТИП 5:
  Пусть S - сумма различных натуральныхделителей целого числа, являющихся простыми числами, не считая самого числа.
  Напишите программу, которая перебирает целые числа, больше 550 000, в порядке возрастания и ищет среди них такие, для которых значение S оканчивается 
на цифру 1. Программа должна найти и вывести первые 5 таких чисел и соответсвующие им значения S.

СПОСОБ 1:
# ТУТ ТЫ ВРЯД ЛИ КОД ПОЙМЕШЬ 
# ТУПА УЧИ КОД 
def isprime(n):
    d = 2
    while d * d <= n:
        if n % d == 0:
            return False
        d+=1
    return True
def koldel(i):
    d = 2
    s = 0
    while d * d < i:
        if i % d == 0:
            if isprime(d):
                s+=d
            if isprime(i//d):
                s+=i//d
        d+=1
    if d * d == i:
        if isprime(d):
            s+=d
    if s != 0 and s % 10 == 1: # сдесь меняем s % 10 == 1 на то что написано в условие => по условию
        return s
k = 0
for i in range(550000,555000): # первое значение (550000) к примеру берем по условию, и сами дописываем второе значение
    if k == 5:                 # 5 - это количество чисел, которые нужно вывести, меняем по условию
        break
    if koldel(i):
        print(i,koldel(i))
        k+=1
   
   
СПОСОБ 2:
def prost(x):
    sq = int(x ** 0.5)
    for i in range(2,sq+1):
        if x % i == 0:
            return False
    return x > 1

for x in range(550000,550100):
    sq = int(x ** 0.5)
    d = set()
    for j in range(2,sq+1):
        if x % j == 0:
            d.add(j)
            d.add(x//j)
    d = [k for k in d if prost(k)]
    if len(d) > 0:
        s = sum(d)
        if s % 10 == 1:
            print(x,s)
    
