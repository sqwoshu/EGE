path_a ='27a.txt'
path_b ='27b.txt'

m = [10000000000000]*3 
def res(path):
    sum = 0
    with open(path, 'r') as file_obj:
        n = int(file_obj.readline())
        for i in file_obj:
            x,y = map(int,i.split())
            sum += max(x, y) 
            k = abs(x - y) 
            p = k % 3 
            if k < m[p]:
                m[p] = k 
        if sum % 3 == 0: 
            sum -= min(m[1],m[2])
        return sum
print(res(path_a),res(path_b))

Имеется  набор  данных,  состоящий  из  пар  положительных  целых  чисел. 
Необходимо выбрать из каждой пары ровно одно число так, чтобы сумма
всех  выбранных  чисел  не  делилась  на3 и  при  этом  была  максимально
возможной. Гарантируется, что искомую сумму получить можно. 
Программа  должна  напечатать  одно  число– максимально  возможную
сумму, соответствующую условиям задачи.

f = open('27_B.txt')
n = int(f.readline())
s = [int(i) for i in f.readline().split()]
for i in range(n-1):
    p = [int(i) for i in f.readline().split()]
    tmp = [a+b for b in p for a in s]
    fs = [0] * 117
    for x in tmp:
        fs[x%3] = max(fs[x%3],x)
    s = [x for x in fs if x != 0]
print(max(i for i in s if i % 3 != 0))
